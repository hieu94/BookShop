/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookshop;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hieu
 */
public class Customers extends javax.swing.JFrame {

    /**
     * Creates new form Customers
     */
    public Customers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    boolean action;
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblCustomers = new javax.swing.JLabel();
        lblCustomerID = new javax.swing.JLabel();
        txtCustomerID = new javax.swing.JTextField();
        lblCustomerName = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        lblCustomerAge = new javax.swing.JLabel();
        txtCustomerAge = new javax.swing.JTextField();
        lblCustomerSex = new javax.swing.JLabel();
        txtCustomerSex = new javax.swing.JTextField();
        lblCustomerNationality = new javax.swing.JLabel();
        txtCustomerNationality = new javax.swing.JTextField();
        lblCustomerAddress = new javax.swing.JLabel();
        txtCustomerAddress = new javax.swing.JTextField();
        lblCustomerPhoneNumber = new javax.swing.JLabel();
        txtCustomerPhoneNumber = new javax.swing.JTextField();
        lblCustomerEmail = new javax.swing.JLabel();
        txtCustomerEmail = new javax.swing.JTextField();
        btnShowAllCustomers = new javax.swing.JButton();
        btnAddNewCustomer = new javax.swing.JButton();
        btnUpdateCustomer = new javax.swing.JButton();
        btnDeleteCustomer = new javax.swing.JButton();
        btnSaveCustomer = new javax.swing.JButton();
        btnCloseWindow = new javax.swing.JButton();
        rdoFindCustomerByCustomerID = new javax.swing.JRadioButton();
        rdoFindCustomerByCustomerName = new javax.swing.JRadioButton();
        txtFindCustomer = new javax.swing.JTextField();
        btnFindCustomer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCustomers = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Customers' Information");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblCustomers.setFont(new java.awt.Font("Tahoma", 1, 70)); // NOI18N
        lblCustomers.setForeground(java.awt.Color.darkGray);
        lblCustomers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCustomers.setText("CUSTOMERS");

        lblCustomerID.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerID.setForeground(java.awt.Color.darkGray);
        lblCustomerID.setText("Customer ID:");

        txtCustomerID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerName.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerName.setForeground(java.awt.Color.darkGray);
        lblCustomerName.setText("Name:");

        txtCustomerName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerAge.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerAge.setForeground(java.awt.Color.darkGray);
        lblCustomerAge.setText("Age:");

        txtCustomerAge.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerSex.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerSex.setForeground(java.awt.Color.darkGray);
        lblCustomerSex.setText("Sex:");

        txtCustomerSex.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerNationality.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerNationality.setForeground(java.awt.Color.darkGray);
        lblCustomerNationality.setText("Nationality:");

        txtCustomerNationality.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerAddress.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerAddress.setForeground(java.awt.Color.darkGray);
        lblCustomerAddress.setText("Address:");

        txtCustomerAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerPhoneNumber.setForeground(java.awt.Color.darkGray);
        lblCustomerPhoneNumber.setText("Phone Number:");

        txtCustomerPhoneNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblCustomerEmail.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCustomerEmail.setForeground(java.awt.Color.darkGray);
        lblCustomerEmail.setText("Email:");

        txtCustomerEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnShowAllCustomers.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnShowAllCustomers.setForeground(java.awt.Color.darkGray);
        btnShowAllCustomers.setText("Show All Customers");
        btnShowAllCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllCustomersActionPerformed(evt);
            }
        });

        btnAddNewCustomer.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAddNewCustomer.setForeground(java.awt.Color.darkGray);
        btnAddNewCustomer.setText("Add New Customer");
        btnAddNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewCustomerActionPerformed(evt);
            }
        });

        btnUpdateCustomer.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdateCustomer.setForeground(java.awt.Color.darkGray);
        btnUpdateCustomer.setText("Update Customer");
        btnUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomerActionPerformed(evt);
            }
        });

        btnDeleteCustomer.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDeleteCustomer.setForeground(java.awt.Color.darkGray);
        btnDeleteCustomer.setText("Delete Customer");
        btnDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomerActionPerformed(evt);
            }
        });

        btnSaveCustomer.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSaveCustomer.setForeground(java.awt.Color.darkGray);
        btnSaveCustomer.setText("Save Customer");
        btnSaveCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCustomerActionPerformed(evt);
            }
        });

        btnCloseWindow.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        btnCloseWindow.setForeground(java.awt.Color.blue);
        btnCloseWindow.setText("CLOSE WINDOW");
        btnCloseWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseWindowActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoFindCustomerByCustomerID);
        rdoFindCustomerByCustomerID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoFindCustomerByCustomerID.setForeground(java.awt.Color.darkGray);
        rdoFindCustomerByCustomerID.setText("Find Customer by Customer ID");

        buttonGroup1.add(rdoFindCustomerByCustomerName);
        rdoFindCustomerByCustomerName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoFindCustomerByCustomerName.setForeground(java.awt.Color.darkGray);
        rdoFindCustomerByCustomerName.setText("Find Customer by Customer Name");

        txtFindCustomer.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnFindCustomer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFindCustomer.setForeground(java.awt.Color.orange);
        btnFindCustomer.setText("Find Customer!");
        btnFindCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindCustomerActionPerformed(evt);
            }
        });

        tableCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Age", "Sex", "Nationality", "Address", "Phone Number", "Email"
            }
        ));
        tableCustomers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCustomers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(lblCustomers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCustomerID)
                                    .addComponent(lblCustomerName)
                                    .addComponent(lblCustomerAge)
                                    .addComponent(lblCustomerSex)
                                    .addComponent(lblCustomerNationality)
                                    .addComponent(lblCustomerAddress))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCustomerNationality, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCustomerSex, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCustomerAge, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCustomerPhoneNumber)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCustomerEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(113, 113, 113)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCustomerPhoneNumber)
                                    .addComponent(txtCustomerEmail)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rdoFindCustomerByCustomerID)
                                            .addComponent(rdoFindCustomerByCustomerName))
                                        .addGap(18, 18, 18)
                                        .addComponent(txtFindCustomer))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFindCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnShowAllCustomers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddNewCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdateCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCloseWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCustomers)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCustomerID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShowAllCustomers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCustomerID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCustomerName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddNewCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCustomerName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtCustomerAge)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCustomerAge)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdateCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(1, 1, 1)))
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCustomerSex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCustomerSex))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCustomerNationality, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSaveCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCustomerNationality))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCustomerAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCustomerAddress))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCustomerPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCustomerPhoneNumber))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCustomerEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnCloseWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdoFindCustomerByCustomerID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoFindCustomerByCustomerName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFindCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFindCustomer)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void RetrieveData(String sql) {
        String header[] = {"Customer ID", "Name", "Age", "Sex", "Nationality", "Address", "Phone number", "Email"};
        DefaultTableModel tblModel = new DefaultTableModel(header, 0);
        try {
            Vector data = null;
            tblModel.setRowCount(0);
            ConnectionToDatabase ketNoi = new ConnectionToDatabase();
            ResultSet resultSet = ketNoi.Query(sql);
            while (resultSet.next()) {
                data = new Vector();
                data.add(resultSet.getString("Customer ID"));
                data.add(resultSet.getString("Name"));
                data.add(resultSet.getInt("Age"));
                data.add(resultSet.getString("Sex"));
                data.add(resultSet.getString("Nationality"));
                data.add(resultSet.getString("Address"));
                data.add(resultSet.getInt("Phone number"));
                data.add(resultSet.getString("Email"));
                
                tblModel.addRow(data);
            }
        tableCustomers.setModel(tblModel);
        } catch (Exception ex) {
            System.out.println("Error!" + ex);
        }
    }
    
    private void btnCloseWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseWindowActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseWindowActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String sql = "SELECT * FROM Customer";
        RetrieveData(sql);
    }//GEN-LAST:event_formWindowOpened

    private void btnShowAllCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllCustomersActionPerformed
        String sql = "SELECT * FROM Customer";
        RetrieveData(sql);
    }//GEN-LAST:event_btnShowAllCustomersActionPerformed

    private void tableCustomersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomersMouseClicked
        String customerID;
        String name;
        int age;
        String sex;
        String nationality;
        String address;
        String phoneNumber;
        String email;
        
        customerID = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 0).toString();
        txtCustomerID.setText(customerID);
        name = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 1).toString();
        txtCustomerName.setText(name);
        age = Integer.parseInt(tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 2).toString());
        txtCustomerAge.setText(String.valueOf(age));
        sex = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 3).toString();
        txtCustomerSex.setText(sex);
        nationality = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 4).toString();
        txtCustomerNationality.setText(nationality);
        address = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 5).toString();
        txtCustomerAddress.setText(address);
        phoneNumber = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 6).toString();
        txtCustomerPhoneNumber.setText(phoneNumber);
        email = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 7).toString();
        txtCustomerEmail.setText(email);
    }//GEN-LAST:event_tableCustomersMouseClicked

    private void btnSaveCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCustomerActionPerformed
        String sql;
        String customerID;
        String name;
        int age;
        String sex;
        String nationality;
        String address;
        String phoneNumber;
        String email; 
        
        customerID = txtCustomerID.getText();
        name = txtCustomerName.getText();
        age = Integer.parseInt(txtCustomerAge.getText());
        sex = txtCustomerSex.getText();
        nationality = txtCustomerNationality.getText();
        address = txtCustomerAddress.getText();
        phoneNumber = txtCustomerPhoneNumber.getText();
        email = txtCustomerEmail.getText();
        
        if (action == true) {
            sql = "INSERT INTO [Customer] VALUES (N'" + customerID + "', N'" + name + "', " + age + ", N'" + sex + "', N'" + nationality + "', N'" + address + "', N'" + phoneNumber + "', N'" + email + "')";
        } else {
            sql = "UPDATE [Customer] SET [Name] = N'" + name + "', Age = " + age + ", Sex = N'" + sex + "', Nationality = N'" + nationality + "', Address = N'" + address + "', [Phone number] = N'" + phoneNumber + "', Email = N'" + email + "' WHERE [Customer ID] = N'" + customerID + "'";
        }
        ConnectionToDatabase ketNoi = new ConnectionToDatabase();
        ketNoi.Update(sql);
        sql = "SELECT * FROM [Customer]";
        RetrieveData(sql);
        btnAddNewCustomer.setEnabled(true);
        btnUpdateCustomer.setEnabled(true);
        btnDeleteCustomer.setEnabled(true);
        btnSaveCustomer.setEnabled(false);
    }//GEN-LAST:event_btnSaveCustomerActionPerformed

    private void btnAddNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewCustomerActionPerformed
        txtCustomerID.setEnabled(true);
        txtCustomerID.setText("");
        txtCustomerName.setText("");
        txtCustomerAge.setText("");
        txtCustomerSex.setText("");
        txtCustomerNationality.setText("");
        txtCustomerAddress.setText("");
        txtCustomerPhoneNumber.setText("");
        txtCustomerEmail.setText("");
        btnAddNewCustomer.setEnabled(false);
        btnUpdateCustomer.setEnabled(false);
        action = true;
        btnSaveCustomer.setEnabled(true);
    }//GEN-LAST:event_btnAddNewCustomerActionPerformed

    private void btnUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCustomerActionPerformed
        action = false;
        txtCustomerID.setEnabled(false);
        btnAddNewCustomer.setEnabled(false);
        btnUpdateCustomer.setEnabled(false);
        btnSaveCustomer.setEnabled(true);
    }//GEN-LAST:event_btnUpdateCustomerActionPerformed

    private void btnDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustomerActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm to delete customer?", "Delete Customer", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            String customerID;
            customerID = tableCustomers.getValueAt(tableCustomers.getSelectedRow(), 0).toString();
            String sql = "DELETE FROM [Customer] WHERE [Customer ID] = N'" + customerID + "'";
            ConnectionToDatabase ketNoi = new ConnectionToDatabase();
            ketNoi.Update(sql);
            sql = "SELECT * FROM [Customer]";
            RetrieveData(sql);
        }
    }//GEN-LAST:event_btnDeleteCustomerActionPerformed

    private void btnFindCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindCustomerActionPerformed
        String sql = "";
        if (rdoFindCustomerByCustomerName.isSelected()) {
            String keyWord = "";
            keyWord = txtFindCustomer.getText();
            sql = "SELECT * FROM [Customer] WHERE Name LIKE '%" + keyWord + "%'";
            RetrieveData(sql);
        } else {
            String keyWord;
            keyWord = txtFindCustomer.getText();
            sql = "SELECT * FROM [Customer] WHERE [Customer ID] LIKE '%" + keyWord + "%'";
            RetrieveData(sql);
        }
    }//GEN-LAST:event_btnFindCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewCustomer;
    private javax.swing.JButton btnCloseWindow;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnFindCustomer;
    private javax.swing.JButton btnSaveCustomer;
    private javax.swing.JButton btnShowAllCustomers;
    private javax.swing.JButton btnUpdateCustomer;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCustomerAddress;
    private javax.swing.JLabel lblCustomerAge;
    private javax.swing.JLabel lblCustomerEmail;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblCustomerNationality;
    private javax.swing.JLabel lblCustomerPhoneNumber;
    private javax.swing.JLabel lblCustomerSex;
    private javax.swing.JLabel lblCustomers;
    private javax.swing.JRadioButton rdoFindCustomerByCustomerID;
    private javax.swing.JRadioButton rdoFindCustomerByCustomerName;
    private javax.swing.JTable tableCustomers;
    private javax.swing.JTextField txtCustomerAddress;
    private javax.swing.JTextField txtCustomerAge;
    private javax.swing.JTextField txtCustomerEmail;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerNationality;
    private javax.swing.JTextField txtCustomerPhoneNumber;
    private javax.swing.JTextField txtCustomerSex;
    private javax.swing.JTextField txtFindCustomer;
    // End of variables declaration//GEN-END:variables
}
