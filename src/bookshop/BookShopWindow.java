/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookshop;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hieu
 */
public class BookShopWindow extends javax.swing.JFrame {

    /**
     * Creates new form BookShopWindow
     */
    boolean action;
    public BookShopWindow() {
        initComponents();
        this.setSize(1080, 800);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        lblBookShop = new javax.swing.JLabel();
        lblBookID = new javax.swing.JLabel();
        lblBookCategoryName = new javax.swing.JLabel();
        lblBookTitle = new javax.swing.JLabel();
        lblAuthorName = new javax.swing.JLabel();
        lblPublishingCompanyName = new javax.swing.JLabel();
        lblDatePublished = new javax.swing.JLabel();
        lblNumberOfPages = new javax.swing.JLabel();
        lblLanguage = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtBookID = new javax.swing.JTextField();
        txtBookCategoryName = new javax.swing.JTextField();
        txtBookTitle = new javax.swing.JTextField();
        txtAuthorName = new javax.swing.JTextField();
        txtPublishingCompanyName = new javax.swing.JTextField();
        txtDatePublished = new javax.swing.JTextField();
        txtNumberOfPages = new javax.swing.JTextField();
        txtLanguage = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnAddNewBook = new javax.swing.JButton();
        btnDeleteBook = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();
        btnSaveBook = new javax.swing.JButton();
        btnExitProgram = new javax.swing.JButton();
        rdoFindBookByID = new javax.swing.JRadioButton();
        rdoFindBookByBookTitle = new javax.swing.JRadioButton();
        txtFindBook = new javax.swing.JTextField();
        btnFindBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBooks = new javax.swing.JTable();
        btnManageBookCategories = new javax.swing.JButton();
        btnManageAuthors = new javax.swing.JButton();
        btnManagePublishingCompanies = new javax.swing.JButton();
        btnManageOrders = new javax.swing.JButton();
        btnManageCustomers = new javax.swing.JButton();
        btnShowAllBooks = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Books");
        setPreferredSize(new java.awt.Dimension(900, 780));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblBookShop.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lblBookShop.setForeground(java.awt.Color.orange);
        lblBookShop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBookShop.setText("BOOK SHOP");

        lblBookID.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBookID.setForeground(java.awt.Color.darkGray);
        lblBookID.setText("Book ID:");

        lblBookCategoryName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBookCategoryName.setForeground(java.awt.Color.darkGray);
        lblBookCategoryName.setText("Book category:");

        lblBookTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBookTitle.setForeground(java.awt.Color.darkGray);
        lblBookTitle.setText("Title:");

        lblAuthorName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblAuthorName.setForeground(java.awt.Color.darkGray);
        lblAuthorName.setText("Author name:");

        lblPublishingCompanyName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPublishingCompanyName.setForeground(java.awt.Color.darkGray);
        lblPublishingCompanyName.setText("Publishing company name:");

        lblDatePublished.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDatePublished.setForeground(java.awt.Color.darkGray);
        lblDatePublished.setText("Date published:");

        lblNumberOfPages.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblNumberOfPages.setForeground(java.awt.Color.darkGray);
        lblNumberOfPages.setText("Number of pages:");

        lblLanguage.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLanguage.setForeground(java.awt.Color.darkGray);
        lblLanguage.setText("Language:");

        lblPrice.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblPrice.setForeground(java.awt.Color.darkGray);
        lblPrice.setText("Price:");

        txtBookID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtBookCategoryName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtBookTitle.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAuthorName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtPublishingCompanyName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDatePublished.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtNumberOfPages.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtLanguage.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnAddNewBook.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAddNewBook.setForeground(java.awt.Color.darkGray);
        btnAddNewBook.setText("Add New Book");
        btnAddNewBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewBookActionPerformed(evt);
            }
        });

        btnDeleteBook.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDeleteBook.setForeground(java.awt.Color.darkGray);
        btnDeleteBook.setText("Delete Book");
        btnDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookActionPerformed(evt);
            }
        });

        btnUpdateBook.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdateBook.setForeground(java.awt.Color.darkGray);
        btnUpdateBook.setText("Update Book");
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });

        btnSaveBook.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSaveBook.setForeground(java.awt.Color.darkGray);
        btnSaveBook.setText("Save Book");
        btnSaveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveBookActionPerformed(evt);
            }
        });

        btnExitProgram.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnExitProgram.setForeground(java.awt.Color.blue);
        btnExitProgram.setText("EXIT PROGRAM");
        btnExitProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitProgramActionPerformed(evt);
            }
        });

        btnGroup.add(rdoFindBookByID);
        rdoFindBookByID.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoFindBookByID.setForeground(java.awt.Color.darkGray);
        rdoFindBookByID.setText("Find Book by Book ID");

        btnGroup.add(rdoFindBookByBookTitle);
        rdoFindBookByBookTitle.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rdoFindBookByBookTitle.setForeground(java.awt.Color.darkGray);
        rdoFindBookByBookTitle.setSelected(true);
        rdoFindBookByBookTitle.setText("Find Book by Book Title");

        txtFindBook.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnFindBook.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFindBook.setForeground(java.awt.Color.darkGray);
        btnFindBook.setText("Find Book!");
        btnFindBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindBookActionPerformed(evt);
            }
        });

        tableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Book category name", "Title", "Author name", "Publishing company ID", "Date published", "Number of pages", "Language", "Price"
            }
        ));
        tableBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBooks);

        btnManageBookCategories.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnManageBookCategories.setForeground(java.awt.Color.darkGray);
        btnManageBookCategories.setText("Manage Book Categories");
        btnManageBookCategories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageBookCategoriesActionPerformed(evt);
            }
        });

        btnManageAuthors.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnManageAuthors.setForeground(java.awt.Color.darkGray);
        btnManageAuthors.setText("Manage Authors");
        btnManageAuthors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageAuthorsActionPerformed(evt);
            }
        });

        btnManagePublishingCompanies.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnManagePublishingCompanies.setForeground(java.awt.Color.darkGray);
        btnManagePublishingCompanies.setText("Manage Publishing Companies");
        btnManagePublishingCompanies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManagePublishingCompaniesActionPerformed(evt);
            }
        });

        btnManageOrders.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnManageOrders.setForeground(java.awt.Color.darkGray);
        btnManageOrders.setText("Manage Orders");
        btnManageOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageOrdersActionPerformed(evt);
            }
        });

        btnManageCustomers.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnManageCustomers.setForeground(java.awt.Color.darkGray);
        btnManageCustomers.setText("Manage Customers");
        btnManageCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCustomersActionPerformed(evt);
            }
        });

        btnShowAllBooks.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnShowAllBooks.setForeground(java.awt.Color.darkGray);
        btnShowAllBooks.setText("Show All Books");
        btnShowAllBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllBooksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBookID)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPublishingCompanyName)
                                    .addComponent(lblBookCategoryName)
                                    .addComponent(lblBookTitle)
                                    .addComponent(lblAuthorName)
                                    .addComponent(lblDatePublished)
                                    .addComponent(lblNumberOfPages)
                                    .addComponent(lblLanguage)
                                    .addComponent(lblPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(rdoFindBookByID)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(rdoFindBookByBookTitle)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtFindBook, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnFindBook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(txtBookID)
                                    .addComponent(txtBookCategoryName)
                                    .addComponent(txtBookTitle)
                                    .addComponent(txtAuthorName)
                                    .addComponent(txtPublishingCompanyName)
                                    .addComponent(txtDatePublished)
                                    .addComponent(txtNumberOfPages)
                                    .addComponent(txtLanguage)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnShowAllBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManagePublishingCompanies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManageOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManageCustomers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExitProgram, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDeleteBook, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(btnAddNewBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdateBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSaveBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnManageBookCategories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManageAuthors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblBookShop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBookShop)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBookID)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBookID)
                        .addComponent(btnShowAllBooks)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookCategoryName)
                    .addComponent(btnAddNewBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateBook)
                    .addComponent(txtBookCategoryName, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookTitle)
                    .addComponent(btnSaveBook)
                    .addComponent(btnDeleteBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAuthorName)
                    .addComponent(btnManageBookCategories)
                    .addComponent(txtAuthorName, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPublishingCompanyName)
                    .addComponent(btnManageAuthors)
                    .addComponent(txtPublishingCompanyName, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDatePublished)
                    .addComponent(btnManagePublishingCompanies)
                    .addComponent(txtDatePublished, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumberOfPages)
                    .addComponent(btnManageOrders)
                    .addComponent(txtNumberOfPages, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLanguage)
                    .addComponent(btnManageCustomers)
                    .addComponent(txtLanguage, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                .addGap(2, 2, 2))
                            .addComponent(lblPrice))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoFindBookByID)
                            .addComponent(txtFindBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFindBook)
                            .addComponent(rdoFindBookByBookTitle)))
                    .addComponent(btnExitProgram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void RetrieveData(String sql) {
        String header[] = {"Book ID", "Book category name", "Title", "Author name", "Publishing company name", "Date published", "Number of pages", "Language", "Price"};
        DefaultTableModel tblModel = new DefaultTableModel(header, 0);
        try {
            Vector data = null;
            tblModel.setRowCount(0);
            ConnectionToDatabase ketNoi = new ConnectionToDatabase();
            ResultSet resultSet = ketNoi.Query(sql);
            while (resultSet.next()) {
                data = new Vector();
                data.add(resultSet.getString("Book ID"));
                data.add(resultSet.getString("Book category name"));
                data.add(resultSet.getString("Title"));
                data.add(resultSet.getString("Author name"));
                data.add(resultSet.getString("Publishing company name"));
                data.add(resultSet.getString("Date published"));
                data.add(resultSet.getInt("Number of pages"));
                data.add(resultSet.getString("Language"));
                data.add(resultSet.getDouble("Price"));
                
                tblModel.addRow(data);
            }
        tableBooks.setModel(tblModel);
        } catch (Exception ex) {
            System.out.println("Error!" + ex);
        }
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String sql = "SELECT * FROM [Book]";
        RetrieveData(sql);
    }//GEN-LAST:event_formWindowOpened

    private void tableBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBooksMouseClicked
        String bookID;
        String bookCategoryName;
        String title;
        String authorName;
        String publishingCompanyName;
        String datePublished;
        int numberOfPages;
        String language;
        double price;
        
        bookID = tableBooks.getValueAt(tableBooks.getSelectedRow(), 0).toString();
        txtBookID.setText(bookID);
        bookCategoryName = tableBooks.getValueAt(tableBooks.getSelectedRow(), 1).toString();
        txtBookCategoryName.setText(bookCategoryName);
        title = tableBooks.getValueAt(tableBooks.getSelectedRow(), 2).toString();
        txtBookTitle.setText(title);
        authorName = tableBooks.getValueAt(tableBooks.getSelectedRow(), 3).toString();
        txtAuthorName.setText(authorName);
        publishingCompanyName = tableBooks.getValueAt(tableBooks.getSelectedRow(), 4).toString();
        txtPublishingCompanyName.setText(publishingCompanyName);
        datePublished = tableBooks.getValueAt(tableBooks.getSelectedRow(), 5).toString();
        txtDatePublished.setText(datePublished);
        numberOfPages = Integer.parseInt(tableBooks.getValueAt(tableBooks.getSelectedRow(), 6).toString());
        txtNumberOfPages.setText(String.valueOf(numberOfPages));
        language = tableBooks.getValueAt(tableBooks.getSelectedRow(), 7).toString();
        txtLanguage.setText(language);
        price = Double.parseDouble(tableBooks.getValueAt(tableBooks.getSelectedRow(), 8).toString());
        txtPrice.setText(String.valueOf(price));
    }//GEN-LAST:event_tableBooksMouseClicked

    private void btnExitProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitProgramActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Exit program?", "Exit Program", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitProgramActionPerformed

    private void btnSaveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveBookActionPerformed
        String sql;
        String bookID;
        String bookCategoryName;
        String title;
        String authorName;
        String publishingCompanyName;
        String datePublished;
        int numberOfPages;
        String language;
        double price;
        
        bookID = txtBookID.getText();
        bookCategoryName = txtBookCategoryName.getText();
        title = txtBookTitle.getText();
        authorName = txtAuthorName.getText();
        publishingCompanyName = txtPublishingCompanyName.getText();
        datePublished = txtDatePublished.getText();
        numberOfPages = Integer.parseInt(txtNumberOfPages.getText());
        language = txtLanguage.getText();
        price = Double.parseDouble(txtPrice.getText());
        
        if (txtBookID.getText().equals("") || txtBookCategoryName.getText().equals("") || txtBookTitle.getText().equals("") || txtAuthorName.getText().equals("") || txtPublishingCompanyName.getText().equals("") || txtDatePublished.getText().equals("") || txtNumberOfPages.getText().equals("") || txtLanguage.getText().equals("") || txtPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Book information can not be left blank!", "Missing book information", JOptionPane.INFORMATION_MESSAGE);
        }
        
        if (action == true) {
            sql = "INSERT INTO Book VALUES (N'" + bookID + "', N'" + bookCategoryName + "', N'" + title + "', N'" + authorName + "', N'" + publishingCompanyName + "', N'" + datePublished + "', " + numberOfPages + ", N'" + language + "', " + price + ")";
        } else {
            sql = "UPDATE Book SET [Book category name] = N'" + bookCategoryName + "', Title = N'" + title + "', [Author name] = N'" + authorName + "', [Publishing company name] = N'" + publishingCompanyName + "', [Date published] = N'" + datePublished + "', [Number of pages] = " + numberOfPages + ", Language = N'" + language + "', Price = " + price + " WHERE [Book ID] = N'" + bookID + "'";
        }
        ConnectionToDatabase ketNoi = new ConnectionToDatabase();
        ketNoi.Update(sql);
        sql = "SELECT * FROM [Book]";
        RetrieveData(sql);
        btnAddNewBook.setEnabled(true);
        btnUpdateBook.setEnabled(true);
        btnDeleteBook.setEnabled(true);
        btnSaveBook.setEnabled(false);
    }//GEN-LAST:event_btnSaveBookActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        action = false;
        txtBookID.setEnabled(false);
        btnAddNewBook.setEnabled(false);
        btnUpdateBook.setEnabled(false);
        btnSaveBook.setEnabled(true);
    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void btnFindBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindBookActionPerformed
        String sql = "";
        if (rdoFindBookByBookTitle.isSelected()) {
            String keyWord = "";
            keyWord = txtFindBook.getText();
            sql = "SELECT * FROM [Book] WHERE [Title] LIKE '%" + keyWord + "%'";
            RetrieveData(sql);
        } else {
            String keyWord;
            keyWord = txtFindBook.getText();
            sql = "SELECT * FROM [Book] WHERE [Book ID] LIKE '%" + keyWord + "%'";
            RetrieveData(sql);
        }
    }//GEN-LAST:event_btnFindBookActionPerformed

    private void btnManageBookCategoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageBookCategoriesActionPerformed
        BookCategories bookCategoriesManagementWindow = new BookCategories();
        bookCategoriesManagementWindow.setVisible(true);
    }//GEN-LAST:event_btnManageBookCategoriesActionPerformed

    private void btnShowAllBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllBooksActionPerformed
        String sql = "SELECT * FROM [Book]";
        RetrieveData(sql);
        btnAddNewBook.setEnabled(true);
        btnUpdateBook.setEnabled(true);
        btnDeleteBook.setEnabled(true);
        btnSaveBook.setEnabled(true);
    }//GEN-LAST:event_btnShowAllBooksActionPerformed

    private void btnManagePublishingCompaniesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManagePublishingCompaniesActionPerformed
        PublishingCompanies publishingCompanies = new PublishingCompanies();
        publishingCompanies.setVisible(true);
    }//GEN-LAST:event_btnManagePublishingCompaniesActionPerformed

    private void btnManageAuthorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageAuthorsActionPerformed
        Authors authors = new Authors();
        authors.setVisible(true);
    }//GEN-LAST:event_btnManageAuthorsActionPerformed

    private void btnManageOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageOrdersActionPerformed
        Orders orders = new Orders();
        orders.setVisible(true);
    }//GEN-LAST:event_btnManageOrdersActionPerformed

    private void btnManageCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCustomersActionPerformed
        Customers customers = new Customers();
        customers.setVisible(true);
    }//GEN-LAST:event_btnManageCustomersActionPerformed

    private void btnAddNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewBookActionPerformed
        txtBookID.setEnabled(true);
        txtBookID.setText("");
        txtBookCategoryName.setText("");
        txtBookTitle.setText("");
        txtAuthorName.setText("");
        txtPublishingCompanyName.setText("");
        txtDatePublished.setText("");
        txtNumberOfPages.setText("");
        txtLanguage.setText("");
        txtPrice.setText("");
        btnAddNewBook.setEnabled(false);
        btnUpdateBook.setEnabled(false);
        action = true;
        btnSaveBook.setEnabled(true);
    }//GEN-LAST:event_btnAddNewBookActionPerformed

    private void btnDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm to delete book?", "Delete Book", dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION) {
            String bookID;
            bookID = tableBooks.getValueAt(tableBooks.getSelectedRow(), 0).toString();
            String sql = "DELETE FROM [Book] WHERE [Book ID] = N'" + bookID + "'";
            ConnectionToDatabase ketNoi = new ConnectionToDatabase();
            ketNoi.Update(sql);
            sql = "SELECT * FROM [Book]";
            RetrieveData(sql);
        }
    }//GEN-LAST:event_btnDeleteBookActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookShopWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookShopWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookShopWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookShopWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookShopWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewBook;
    private javax.swing.JButton btnDeleteBook;
    private javax.swing.JButton btnExitProgram;
    private javax.swing.JButton btnFindBook;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnManageAuthors;
    private javax.swing.JButton btnManageBookCategories;
    private javax.swing.JButton btnManageCustomers;
    private javax.swing.JButton btnManageOrders;
    private javax.swing.JButton btnManagePublishingCompanies;
    private javax.swing.JButton btnSaveBook;
    private javax.swing.JButton btnShowAllBooks;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAuthorName;
    private javax.swing.JLabel lblBookCategoryName;
    private javax.swing.JLabel lblBookID;
    private javax.swing.JLabel lblBookShop;
    private javax.swing.JLabel lblBookTitle;
    private javax.swing.JLabel lblDatePublished;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblNumberOfPages;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblPublishingCompanyName;
    private javax.swing.JRadioButton rdoFindBookByBookTitle;
    private javax.swing.JRadioButton rdoFindBookByID;
    private javax.swing.JTable tableBooks;
    private javax.swing.JTextField txtAuthorName;
    private javax.swing.JTextField txtBookCategoryName;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtDatePublished;
    private javax.swing.JTextField txtFindBook;
    private javax.swing.JTextField txtLanguage;
    private javax.swing.JTextField txtNumberOfPages;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPublishingCompanyName;
    // End of variables declaration//GEN-END:variables
}
